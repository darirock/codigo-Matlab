% Simulación de parámetros
BW = 20*10^6; % 20 MHz
No = 10^-22; % A/Hz [Haas]
N = (No*BW)/2;
ptlmncdntrd =1; %Potencia luminica de entrada

% Radiation (perpendicular al suelo)
Pled_dB = 10; 
Pled = 10^(Pled_dB*0.1);

%------------------------------------------
% Concentrador óptico y filtro
% -----------------------------------------
tsfilter = 1; 
csilimitdegree = 75; 
csilimit = csilimitdegree;
n = 1; 

IO=0.73;%Intensidad luminosa
IOt=60*60*IO;%Intensidad luminosa total

x=2; y=5; z=4; %Dimensiones entorno
%donde el centro del techo es(0,0,0) 

%Matriz posicion tranceptores
%Ambiente 2: 5 luminarias en fila
%         x y z
% mtrxlxy=[  0  2  5;
%            0  1  5;
%            0  0  5;
%            0 -1  5;
%            0 -2  5;
%           ];

%Ambiente 1: 4 luminarias en matriz 2x2      

mtrxlxy=[-0.5 -1.25  4; 0.5  1.25  4; 0.5 -1.25  4; -0.5  1.25  4]; 
%mtrxlxy=[0,0,4]; %Modelo para una luminaria ubicada en el centro
%x=2; y=5; z=5.7; %Dimensiones entorno  

%Puede realizar el estudio para cualquier cantidad de luminarias 
%ubicados en cualquier lugar del entorno

%-----------------------------------------
% Receptor 
%-----------------------------------------
lzp=1; % Altura del receptor(z) 
%Altura del casco del minero (transceptor p)

ar= 0.001; %area receptor m^2 >>>(1 cm^2)
resp = 1; %Fotodiodo de respuesta 1 por negligencia.
smanglmdptnc = 70; % semiangulo a media potencia del LED
fov=60;
%ADR'S Angle diversity receiver
%Para este estudio se realizara el modelo de receptor óptico
adr=20;
% adr=1 %Fotodiodo sencillo
% adr=9 % adr coN 9 fotodiodos
% adr=20 %adr con 20 fotodiodos
%-----------------------------------------
excttd=10;
Nx = x*excttd; 
Ny = y*excttd; 
X = -x/2:x/Nx:x/2; %Matiz X
Y = -y/2:y/Ny:y/2; %Matriz Y 
[rx,ry]=meshgrid(X,Y); 
zslmnrs=size(mtrxlxy,1);
d=[];
c=physconst('LightSpeed');%Velocidad de la luz
szmtrxlxy=size(mtrxlxy,1);
for k=1:zslmnrs
lxi=mtrxlxy(k,1); lyi=mtrxlxy(k,2); lzi=mtrxlxy(k,3); %Posicion de la luminaria (transceptor i) 
d(:,:,k)= sqrt(((abs(rx)-lxi).^2)+((abs(ry)-lyi).^2)+((lzp-lzi)^2));
%d(:,:,i)= sqrt(((rx-lxi).^2)+((ry-lyi).^2));
%Matriz de distancia al fotodiodo

end
cosphi = (sqrt((lzi-lzp)^2)./d);
phi=(acosd(cosphi));
psi=90-phi;
sinpsi2=sind(psi).^2;
cospsi=cosd(psi);
% d: Matriz de distancia al fotodiodo

if ( csilimit >= acos(cospsi)) %concentrador
gcsi = n^2/(sind(csilimit))^2; 
else %si el concentrador se excede, la señal no pasa atravez del canal LOS
gcsi = 0;
end

%display('m Es el orden de emision lambertiana y está dado por el semiangulo a media potencia del LED');
m= -log(2)/log(cosd(smanglmdptnc));
% m1 Es el orden de emisión lambertiana y está dado por el 
% semiangulo a media potencia del LED

%------------------------------------------------------------------------
%MODELO DE PERDIDA DE RUTA (PATH LOSS MODEL)
%------------------------------------------------------------------------

szhloss=size(d,1);
szhloss2=size(d,2);
H1ttl=ones(szhloss,szhloss2);
prdctrcsphi=ones(szhloss,szhloss2);
prdctrcspsi=ones(szhloss,szhloss2);
prdctrcspsi=ones(szhloss,szhloss2);
prdctrd=ones(szhloss,szhloss2);
prdctrhloss=ones(szhloss,szhloss2);
gpsicc2=zeros(szhloss,szhloss2);
gpsic2=zeros(szhloss,szhloss2);

for i=1:zslmnrs  
    gpsicc2=n^2./sinpsi2(:,:,i);
    gpsic2(:,:,i)=gpsicc2;
    if i<=2
    prdctrcsphi=cosphi(:,:,i).*prdctrcsphi;
    prdctrcspsi=cospsi(:,:,i).*prdctrcspsi;
    end
    prdctrcspsi=cospsi(:,:,i).*prdctrcspsi;
    prdctrcspsi=cospsi(:,:,i).*prdctrcspsi;
    prdctrd=d(:,:,i).*prdctrd;
end
arprdctrcsphi=ar*prdctrcsphi;
%area efectiva para la inclinacion del rayo respecto a la superficie del receptor.

ttlHHlos=zeros(size(d,1),size(d,2));
ttlHHlos2=zeros(size(d,1),size(d,2));
ttlHNlos=zeros(size(d,1),size(d,2));
H=zeros(size(d,1),size(d,2));

ttlHH1=zeros(size(d,1),size(d,2));
ts=1;
tspsi=ts*psi;
for k=1:szmtrxlxy
%ecuacion para el canal VLC LOS H0
for i=1:length(rx)
t = [i length(rx)];
for j = 1:size(rx,2)
%(abs(t(1)*(d(i,j,k)/c))
Hlos(i,j,k)=(gcsi*tspsi(i,j,k)*(m+1)*ar*(z-lzp)^(m+1))/((2*pi*((z-lzp)^2+(x-abs(rx(k,k)))^2+(y-abs(ry(k,k))^2)^((m+3)/2))));%Hlos 
HHlos(i,j,k)=(abs(t(1)*(d(i,j,k)/c))*(rectangularPulse(phi(i,j,k)/smanglmdptnc))* cospsi(i,j,k)*tspsi(i,j,k)*((m+1)*gcsi*((((cosphi(i,j,k))^m))/(2*pi*d(i,j,k)^2))));
ttlHHlos(i,j)=ttlHHlos(i,j)+HHlos(i,j,k);   
ttlHHlos2(i,j)=ttlHHlos2(i,j)+Hlos(i,j,k);       
end  end    end

HH1 = ptlmncdntrd*HHlos;%Potencia optica recibida 
rho=0.8;%coheficiente de reflexion
for k=1:szmtrxlxy
%ecuacion para el canal VLC LOS H0

for i=1:length(rx)
    t = [i length(rx)];
for j = 1:size(rx,2)  
%HNlos
%ganancia de canal HNlos

Llq(i,j,k)= ((m+1)*gcsi*tsfilter*resp*d(i,j,k).*((prdctrcsphi(i,j))^m))./(2*pi.*prdctrd(i,j)^2);
Llp(i,j,k)= (rho)/(2*pi*prdctrd(i,j)^2);

HNlos(i,j,k)=((abs(t(1)-((d(i,j,k)))/c)*((cosphi(i,j,k))^m)*prdctrcspsi(i,j)*prdctrcspsi(i,j))/(2*pi*prdctrd(i,j)^2))*ar^szmtrxlxy*ar*(m+1)*rho^szmtrxlxy*tspsi(i,j,k)*gcsi*(rectangularPulse(phi(i,j,k)/smanglmdptnc));
end  end   end

for i=1:zslmnrs
prdctrhloss=HH1(:,:,i)+prdctrhloss;
ttlHNlos=ttlHNlos+HNlos(:,:,k);
ttlHH1=ttlHH1+HH1(:,:,k);
end
HH=real(ttlHHlos)+real(ttlHNlos);
%HH=real(ttlHHlos2);%Quite el comentario de esta linea para visualizar el modelo sencillo
%En 
%PL=PL1(:,3)+10*log(d/d(3,:));

Ad = (10)*randn;
Ib=202e-6;% Ruido de fodo de la corriente de interferencia
N0=2*q*Ib;%Densidad de ruido espectral

Rb=1e6;%taza de bit
Tb=1/Rb;%duración bit
sig_length=1e5;% numero de bits
nsamp=10;% muestras por simbolo
Tsamp=Tb/nsamp;% sampling time

for i=1:length(rx)
t = [i length(rx)];
for j = 1:size(rx,2)  
rdsht(i,j)=2*q*(rspnsvty*ttlHHlos(i,j)+Ibg*I2);%Ruido shot 
end end

rdthrml=((8*pi*k*tk*cpd*ar*I2*B^2)/gol)+(((16*pi^2*k*tk*FET)/gm)*cpd^2*ar^2*I3*B^3);%Ruido termal

njt=rdsht*rdthrml;%Ruido 
%-------------------------------------
%ADR'S Angle diversity receiver
%Para este estudio se realizará el modelo de receptor óptico
% adr=1 %Fotodiodo sencillo
% adr=9 % adr co 9 fotodiodos
% adr=20 %adr con 20 fotodiodos
H=H+resp*HH.*ttlHH1+njt;
for ap=1:adr
    
    H=H+resp*HH.*ttlHH1+njt;
    end

PL=-10*log10(H);

%----------------------------------------------------------
%DISPERSION DE LA LUZ EN EL INVERNADERO

%De acuerdo con las normas gubernamentales 
% 10 mg//m^3
%El material particulado genera absorción y dispersión cuando la luz la
%atraviesa

Elux=IOt*((cosphi).^m);%Iluminancia
lmnsintsty=IOt*((cosphi).^m)./(d.^2);%Intensidad luminosa
ttlElux=ones(szhloss,szhloss2);
ttllmnsintsty=ones(szhloss,szhloss2);
for i=1:zslmnrs%Iluminancia total
ttlElux=Elux(:,:,i)+ttlElux;
ttllmnsintsty=lmnsintsty(:,:,i)+ttllmnsintsty;
end 
freq=10e9;
r=1;%radio

Ilmnncprll=(Elux.*c^2/(r*4*pi^2))*sin(csilimit);
% Root mean square RMS delay spread
% propagacion del retraso cuadrático (RMS) raiz media 

yjt=zeros(szhloss,szhloss2);
mnxcdly=zeros(szhloss,szhloss2);
mnxcdly1=zeros(szhloss,szhloss2);
mnxcdly2=zeros(szhloss,szhloss2);
mnxcdly3=zeros(szhloss,szhloss2);
RMS=zeros(szhloss,szhloss2);

% Strongest AP

R_sbc=[];
R_rmc=[];
[Vmax lmx] = max(sum(H,2));
for i=1:length(rx)
    t = [i length(rx)];
for j = 1:size(rx,2)
%Hlmx=lmx(1,1,lzi);
SINR(i,j) = (Pled*(H(i,j))^2)/( (Pled*(sum(H(:,j))-H(i,j)))^2 + N*4);
%% Select best combining
SINR_sbc = max(SINR);

R_sbc(i,j) = BW*log2(1+SINR(i,j));
%% Equal gain combining 
ssH=sum(sum(H));
sHi=sum(H(i,:));
lssHsHi=ssH-sHi;
plssH=max(Pled*lssHsHi);
plssH2=plssH^2;
SINR_egc = (Pled*sum(H(i,:))^2)/( plssH2 + N*4);      
SINR_egcmtrx(i,j)=SINR_egc;
R_egc(i,j) = BW*log2(1+SINR_egc);

%% Maximum ratio combining 
%% Calcular el peso del usuario
w = zeros(1,lzi);
denom = 0;
num = 0;        
w = ((Pled*H(i,j))^2)/( (Pled*(sum(H(:,j))-H(i,j)))^2 + N);
        
%w = w/norm(w);
for pd = 1:lzi
denom = denom + (Pled*w*(sum(H(:,j))-H(i,j)))^2 + w^2*N;
end
                  
num = (Pled*sum(w.*H(pd,j)))^2;
SINR_rmc(i,j) = num/denom;
mnxcdly1=mnxcdly1+t(1)*ttlHHlos.^2;
mnxcdly2=ttlHHlos;       
end end  

R_rmc = BW*log2(1+SINR_rmc);     
mnxcdly=mnxcdly1./mnxcdly2;
for i=1:length(rx)
    t = [i length(rx)];
for j = 1:size(rx,2)
%RMS DELAY spread
mnxcdly3=mnxcdly3+(t(1)-mnxcdly).^2;
end end

RMS=sqrt((mnxcdly1.*ttlHHlos.^2)./mnxcdly3);%RMS dealy spread

figure(1);%Graficar
surf(rx,ry,100*log10(real(prdctrhloss)),100*log10(real(prdctrhloss)),'EdgeColor','none');%prdctrhloss=HH1(:,:,i).*prdctrhloss -> productoria
colorbar
xlabel({'Longitud x','(metros)'});
ylabel ({'Longitud y','(metros)'});
zlabel ({'Potencia óptica','(Watt)'});
xlim([-x/2,x/2])
ylim([-y/2,y/2])
title({'Potencia óptica recibida por el tranceptor p aportada por i luminarias '});
hold off

% figure(2)
% surf(rx,ry,real(H),real(H),'EdgeColor','none');%Graficar
% %Graficar
% 
% colorbar
% xlabel({'Longitud x','(metros)'});
% ylabel ({'Longitud y','(metros)'});
% zlabel ({'Respuesta del canal','( )'});
% xlim([-x/2,x/2])
% ylim([-y/2,y/2])
% title({'Hlos Canal de respuesta entre i luminarias y un receptor p'});
% 
% figure(3)
% surf(rx,ry,real(ttlHHlos),real(ttlHHlos),'EdgeColor','none');%Graficar
% %Graficar
% colorbar
% xlabel({'Longitud x','(metros)'});
% ylabel ({'Longitud y','(metros)'});
% zlabel ({'Respuesta del canal','( )'});
% xlim([-x/2,x/2])
% ylim([-y/2,y/2])
% title({'Hlos Canal de respuesta entre i luminarias y un receptor p asumiendo...'});
% 
% figure(4)
% surf(rx,ry,real(ttlHNlos),real(ttlHNlos),'EdgeColor','none')
% colorbar
% xlabel({'Longitud x','(metros)'});
% ylabel ({'Longitud y','(metros)'});
% zlabel ({'HHNlos','(dB)'});
% title({'HHNlos'});
% 
% figure(5)
% for i=1:szmtrxlxy
% surf(rx,ry,real(Elux(:,:,i)),real(Elux(:,:,i)),'EdgeColor','none');%Graficar
% hold on
% end
% colorbar
% xlabel({'Longitud x','(metros)'});
% ylabel ({'Longitud y','(metros)'});
% zlabel ({'Iluminancia','(lux)'});
% xlim([-x/2,x/2])
% ylim([-y/2,y/2])
% title({'Iluminancia o flujo luminoso aportada por cada luminaria en el invernadero'});
